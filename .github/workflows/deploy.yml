name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Create Firebase Configuration
        run: |
          echo "Creating firebase-env.js with configuration..."
          cat > firebase-env.js << EOF
          // Firebase configuration injected during build
          window.FIREBASE_CONFIG = {
            apiKey: "${{ secrets.FIREBASE_API_KEY }}",
            authDomain: "${{ secrets.FIREBASE_AUTH_DOMAIN }}",
            databaseURL: "${{ secrets.FIREBASE_DATABASE_URL }}",
            projectId: "${{ secrets.FIREBASE_PROJECT_ID }}",
            storageBucket: "${{ secrets.FIREBASE_STORAGE_BUCKET }}",
            messagingSenderId: "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}",
            appId: "${{ secrets.FIREBASE_APP_ID }}",
            measurementId: "${{ secrets.FIREBASE_MEASUREMENT_ID }}"
          };
          EOF
          echo "firebase-env.js created successfully"
          echo "File size: $(wc -c < firebase-env.js) bytes"
          ls -la firebase-env.js
          
      - name: Create Security Headers
        run: |
          cat > _headers << EOF
          /*
            X-Frame-Options: DENY
            X-Content-Type-Options: nosniff
            Referrer-Policy: strict-origin-when-cross-origin
            Permissions-Policy: geolocation=(), microphone=(), camera=()
          EOF
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Verify files before upload
        run: |
          echo "Checking if firebase-env.js exists..."
          if [ -f firebase-env.js ]; then
            echo "✅ firebase-env.js exists"
            echo "File size: $(wc -c < firebase-env.js) bytes"
            echo "First line: $(head -1 firebase-env.js)"
            echo "Number of lines: $(wc -l < firebase-env.js)"
            echo "Checking for 'window.FIREBASE_CONFIG' in file:"
            grep -q "window.FIREBASE_CONFIG" firebase-env.js && echo "✅ Found window.FIREBASE_CONFIG" || echo "❌ window.FIREBASE_CONFIG not found"
          else
            echo "❌ firebase-env.js does not exist"
            exit 1
          fi
          echo "All files in root directory:"
          ls -la
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
